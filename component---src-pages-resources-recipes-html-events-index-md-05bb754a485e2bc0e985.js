"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6173],{12699:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return p}});var o=t(58168),a=t(80045),r=(t(88763),t(15680)),l=t(83407);const i=["components"],d={},m=(s="CodeBlock",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)});var s;const u={_frontmatter:d},c=l.A;function p(e){let{components:n}=e,t=(0,a.A)(e,i);return(0,r.mdx)(c,(0,o.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"html-events-and-event-listeners"},"HTML events and event listeners"),(0,r.mdx)("p",null,"There are different techniques to capture an HTML event and add ",(0,r.mdx)("inlineCode",{parentName:"p"},"eventlisteners")," to an element."),(0,r.mdx)("p",null,"The technique you choose is simply your preference. Pick the method you feel most comfortable with. However, you need to configure one particular permission for inline event handlers, such as ",(0,r.mdx)("inlineCode",{parentName:"p"},'<button onclick="btnClick()">Click Me</button>')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"In plugins"),", you will need to enable ",(0,r.mdx)("inlineCode",{parentName:"p"},"allowCodeGenerationFromStrings")," if you would like to use the inline event handlers shown above. ",(0,r.mdx)("br",null),"\nIMPORTANT: Please read about the ",(0,r.mdx)("a",{parentName:"p",href:"../../../plugins/concepts/manifest/index.md#permissionsdefinition"},"manifest permissions")," module before you proceed."),(0,r.mdx)("h2",{id:"system-requirements"},"System requirements"),(0,r.mdx)("p",null,"Please make sure your local environment uses the following application versions before proceeding."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Premiere Pro v25.2 or higher"),(0,r.mdx)("li",{parentName:"ul"},"UDT v2.1.0 or higher"),(0,r.mdx)("li",{parentName:"ul"},"Manifest version v5 or higher")),(0,r.mdx)("h2",{id:"examples"},"Examples"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Declaring event listeners in JavaScript")),(0,r.mdx)(m,{slots:"heading, code",repeat:"2",languages:"HTML, JavaScript",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"html"},"HTML"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-html"},'<button id="firstButton">Click me</button>\n<button id="secondButton">Click me</button>\n')),(0,r.mdx)("h4",{id:"javascript"},"JavaScript"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'const firstButton = document.getElementById("firstButton");\nfirstButton.addEventListener("click", foo);\n\nconst secondButton = document.getElementById("secondButton");\nsecondButton.onclick = foo;\n\nfunction foo(event) {\n    console.log(`Button clicked ${event.target.id}`);\n}\n')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Declaring inline event handlers")),(0,r.mdx)(m,{slots:"heading, code",repeat:"3",languages:"HTML, JavaScript, JSON",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"html-1"},"HTML"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-html"},"<button id=\"thirdButton\" onclick='foo(event)'>Click me</button>\n")),(0,r.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},"function foo(event) {\n    console.log(`Button clicked ${event.target.id}`);\n}\n")),(0,r.mdx)("h4",{id:"manifest"},"manifest"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "requiredPermissions": {\n        "allowCodeGenerationFromStrings" : true\n    }\n}\n')),(0,r.mdx)("h2",{id:"additional-notes"},"Additional notes"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"The above examples will also work for Spectrum Widgets and Spectrum Web Components in UXP.")),(0,r.mdx)("h2",{id:"reference-material"},"Reference material"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"../../../uxp-api/reference-js/Global%20Members/HTML%20Events/"},"HTML Events"))))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-resources-recipes-html-events-index-md-05bb754a485e2bc0e985.js.map
{"version":3,"file":"component---src-pages-plugins-tutorials-adding-command-entrypoints-index-md-dd2ac462c51c10df33ac.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/plugins/tutorials/adding-command-entrypoints/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-premiere-pro/uxp-premiere-pro/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adding-command-entrypoints-to-your-plugin\"\n    }}>{`Adding command entrypoints to your plugin`}</h1>\n    <p>{`Command entrypoints are the most common type of entrypoint. They allow you to add commands to the Premiere Pro user interface. When the user runs a command, your plugin can perform a variety of actions, such as opening a dialog and changing the document.`}</p>\n    <h2 {...{\n      \"id\": \"adding-a-command-entrypoint-to-the-manifest\"\n    }}>{`Adding a command entrypoint to the manifest`}</h2>\n    <p>{`In your `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` file, register a new `}<inlineCode parentName=\"p\">{`command`}</inlineCode>{`-type entrypoint:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    // ...\n    \"entrypoints\": [\n        {\n            \"type\": \"command\",\n            \"id\": \"myCommand\",\n            \"label\": \"My Command\"\n        }\n    ]\n}\n`}</code></pre>\n    <p>{`This will add a new command entrypoint with the ID `}<inlineCode parentName=\"p\">{`\"myCommand\"`}</inlineCode>{` (this will be important later) to your plugin. It will show up as `}<em parentName=\"p\">{`My Command`}</em>{` in the Premiere Pro user interface.`}</p>\n    <h2 {...{\n      \"id\": \"adding-a-function-to-handle-the-command\"\n    }}>{`Adding a function to handle the command`}</h2>\n    <p>{`Now, we need some code that gets run when the command gets triggered. In your `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file, add a function to handle the command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function myCommandHandler() {\n    // Do something\n}\n`}</code></pre>\n    <p>{`Note that the name of the function doesn't matter. You can name it whatever you want.`}</p>\n    <h2 {...{\n      \"id\": \"associating-the-command-entrypoint-with-the-command-handler\"\n    }}>{`Associating the command entrypoint with the command handler`}</h2>\n    <p>{`There are two ways to add a command entrypoint to your plugin's code.`}</p>\n    <h3 {...{\n      \"id\": \"method-1-setup-entrypoints-using-the-uxp-api\"\n    }}>{`Method 1: Setup entrypoints using the UXP API`}</h3>\n    <p>{`In your JavaScript code (for example, in your `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{`, add the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { entrypoints } = require(\"uxp\");\n\nentrypoints.setup({\n    commands: {\n        myCommand: myCommandHandler\n    }\n});\n`}</code></pre>\n    <p>{`Note that `}<inlineCode parentName=\"p\">{`myCommand`}</inlineCode>{` is the ID of the command entrypoint we registered in the manifest.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You can only call `}<inlineCode parentName=\"p\">{`entrypoints.setup()`}</inlineCode>{` once. If you call it more than once, it will throw an error. If you need to add more entrypoints, you need to add them all at once.`}</p>\n    <h3 {...{\n      \"id\": \"method-2-javascript-based-main-file\"\n    }}>{`Method 2: JavaScript-based main file`}</h3>\n    <p>{`Another method you can use that's especially useful for smaller plugins that only contain command entrypoints is to use a JavaScript-based main file (instead of an HTML file).`}</p>\n    <p>{`To do so, in your `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` file, set the `}<inlineCode parentName=\"p\">{`main`}</inlineCode>{` property to the path of your `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    // ...\n    main: \"index.js\",\n    // ...\n}\n`}</code></pre>\n    <p>{`Then, in your `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file, add the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = {\n    commands: {\n        myCommand: myCommandHandler\n    }\n};\n`}</code></pre>\n    <p>{`Note that `}<inlineCode parentName=\"p\">{`myCommand`}</inlineCode>{` is the ID of the command entrypoint we registered in the manifest.`}</p>\n    <p>{`Now, the HTML file is no longer needed. You can delete it. This is especially useful when converting scripts to plugins.`}</p>\n    <h2 {...{\n      \"id\": \"conclusion\"\n    }}>{`Conclusion`}</h2>\n    <p>{`That's it! You've added a command entrypoint to your plugin. When you now load your plugin, you should see a new command called `}<em parentName=\"p\">{`My Command`}</em>{` in the `}<strong parentName=\"p\">{`Plugins`}</strong>{` menu:`}</p>\n    <figure>{`\n  `}<span parentName=\"figure\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"63.125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/5530d/command-plugin.webp 320w\", \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/0c8fb/command-plugin.webp 640w\", \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/94b1e/command-plugin.webp 1280w\", \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/0b34d/command-plugin.webp 1920w\", \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/bfa38/command-plugin.webp 2080w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/dd4a7/command-plugin.png 320w\", \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/0f09e/command-plugin.png 640w\", \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/bbbf7/command-plugin.png 1280w\", \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/ac7a9/command-plugin.png 1920w\", \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/45416/command-plugin.png 2080w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-premiere-pro/static/7623ecd5c62ef4d450238d0f37c90179/bbbf7/command-plugin.png\",\n            \"alt\": \"Screenshot of the Plugins menu with the My Command menu item highlighted\",\n            \"title\": \"Screenshot of the Plugins menu with the My Command menu item highlighted\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span>{`\n  `}<figcaption parentName=\"figure\">{`The My Command menu item`}</figcaption>\n    </figure>\n    <p>{`When you click on it, the `}<inlineCode parentName=\"p\">{`myCommandHandler()`}</inlineCode>{` function will run.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}
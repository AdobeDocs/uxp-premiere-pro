{"version":3,"file":"component---src-pages-resources-recipes-clipboard-index-md-692b16aebb7174b0f7d9.js","mappings":"0TAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIU,YAJF,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,aACJ,cACJA,EAAAA,EAAAA,KAAA,SAAI,sDACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,uBACJ,wBACJA,EAAAA,EAAAA,KAAA,SAAI,uGACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,iCACrBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,+BACrBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,mCAIvBX,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,cAAuB,qCAAoCX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,aAA0B,6BAA4BX,EAAAA,EAAAA,KAAA,WAAU,+BAA8BA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC1N,KAAQ,6DACN,wBAA4B,yBAElCX,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,YACJA,EAAAA,EAAAA,KAACL,EAAS,CAACiB,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,mBAAmBJ,QAAQ,eACjFV,EAAAA,EAAAA,KAAA,MACE,GAAM,cACJ,eACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eACX,qsBAqBNX,EAAAA,EAAAA,KAAA,MACE,GAAM,YACJ,aACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,iBACX,sFAMNX,EAAAA,EAAAA,KAAA,MACE,GAAM,oBACJ,qBACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,iGAEvBX,EAAAA,EAAAA,KAAA,MACE,GAAM,sBACJ,uBACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,KAC9B,KAAQ,8EACN,aAAiB,UAI7B,CAEAP,EAAWW,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/resources/recipes/clipboard/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-premiere-pro/uxp-premiere-pro/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"clipboard\"\n    }}>{`Clipboard`}</h1>\n    <p>{`Read and write content from and to the clipboard.`}</p>\n    <h2 {...{\n      \"id\": \"system-requirements\"\n    }}>{`System requirements`}</h2>\n    <p>{`Please make sure your local environment uses the following application versions before proceeding.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Premiere Pro v25.2 or higher`}</li>\n      <li parentName=\"ul\">{`UXP version v7.1 or higher`}</li>\n      <li parentName=\"ul\">{`Manifest version v5 or higher`}</li>\n    </ul>\n    {/* InlineAlert variant=\"info\" slots=\"header, text1, text2\"/*/}\n    {/* Plugins and Scripts */}\n    <p><strong parentName=\"p\">{`In plugins`}</strong>{`, you should seek permission for `}<inlineCode parentName=\"p\">{`clipboard`}</inlineCode>{` access in the manifest. `}<br></br>{` IMPORTANT: Read about the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../plugins/concepts/manifest/#permissionsdefinition\"\n      }}>{`manifest permissions`}</a>{` before you proceed.`}</p>\n    {/* **In scripts**, the permission for `clipboard` is fixed. You can ignore the manifest details in the following examples. Learn about these values in the [manifest fundamentals section](../../fundamentals/manifest/). */}\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JavaScript, JSON\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function foo() {\n    const clipboard = navigator.clipboard;\n\n    // Setting content for clipboard\n    clipboard.setContent({ 'text/plain': \"Test string to validate clipboard setContent\" })\n        .then(() => {\n            console.log(\"Data successfully set on clipboard\");\n        }, (error) => {\n            console.error(\"Error while setting data on clipboard:\", error);\n        });\n\n\n    // Reading from clipboard and printing\n    clipboard.getContent()\n        .then((result) => {\n            console.log(\\`Data from clipboard: \\${result[\"text/plain\"]}\\`);\n        }, (error) => {\n            console.error(\"Error while reading data from clipboard:\", error);\n        });\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"manifest\"\n    }}>{`manifest`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"requiredPermissions\": {\n        \"clipboard\": \"readAndWrite\"\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"additional-notes\"\n    }}>{`Additional notes`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Set the permission to \"read\" if your script/plugin only intends to read from the clipboard.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"reference-material\"\n    }}>{`Reference material`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../../uxp-api/reference-js/Global%20Members/Data%20Transfers/Clipboard/\"\n        }}>{`Clipboard`}</a>{` APIs`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","CodeBlock","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}
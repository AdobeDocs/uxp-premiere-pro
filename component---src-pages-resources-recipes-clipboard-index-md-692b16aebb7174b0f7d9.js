"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6430],{35556:function(e,n,r){r.r(n),r.d(n,{_frontmatter:function(){return d},default:function(){return u}});var o=r(58168),t=r(80045),a=(r(88763),r(15680)),i=r(83407);const l=["components"],d={},s=(m="CodeBlock",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.mdx)("div",e)});var m;const p={_frontmatter:d},c=i.A;function u(e){let{components:n}=e,r=(0,t.A)(e,l);return(0,a.mdx)(c,(0,o.A)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"clipboard"},"Clipboard"),(0,a.mdx)("p",null,"Read and write content from and to the clipboard."),(0,a.mdx)("h2",{id:"system-requirements"},"System requirements"),(0,a.mdx)("p",null,"Please make sure your local environment uses the following application versions before proceeding."),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Premiere Pro v25.2 or higher"),(0,a.mdx)("li",{parentName:"ul"},"UXP version v7.1 or higher"),(0,a.mdx)("li",{parentName:"ul"},"Manifest version v5 or higher")),(0,a.mdx)("p",null,(0,a.mdx)("strong",{parentName:"p"},"In plugins"),", you should seek permission for ",(0,a.mdx)("inlineCode",{parentName:"p"},"clipboard")," access in the manifest. ",(0,a.mdx)("br",null)," IMPORTANT: Read about the ",(0,a.mdx)("a",{parentName:"p",href:"../../../plugins/concepts/manifest/#permissionsdefinition"},"manifest permissions")," before you proceed."),(0,a.mdx)("h2",{id:"example"},"Example"),(0,a.mdx)(s,{slots:"heading, code",repeat:"2",languages:"JavaScript, JSON",mdxType:"CodeBlock"}),(0,a.mdx)("h4",{id:"javascript"},"JavaScript"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},'async function foo() {\n    const clipboard = navigator.clipboard;\n\n    // Setting content for clipboard\n    clipboard.setContent({ \'text/plain\': "Test string to validate clipboard setContent" })\n        .then(() => {\n            console.log("Data successfully set on clipboard");\n        }, (error) => {\n            console.error("Error while setting data on clipboard:", error);\n        });\n\n\n    // Reading from clipboard and printing\n    clipboard.getContent()\n        .then((result) => {\n            console.log(`Data from clipboard: ${result["text/plain"]}`);\n        }, (error) => {\n            console.error("Error while reading data from clipboard:", error);\n        });\n}\n')),(0,a.mdx)("h4",{id:"manifest"},"manifest"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "requiredPermissions": {\n        "clipboard": "readAndWrite"\n    }\n}\n')),(0,a.mdx)("h2",{id:"additional-notes"},"Additional notes"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},'Set the permission to "read" if your script/plugin only intends to read from the clipboard.')),(0,a.mdx)("h2",{id:"reference-material"},"Reference material"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"../../../uxp-api/reference-js/Global%20Members/Data%20Transfers/Clipboard/"},"Clipboard")," APIs")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-resources-recipes-clipboard-index-md-692b16aebb7174b0f7d9.js.map
{"version":3,"file":"component---src-pages-resources-recipes-css-styling-index-md-3aca5b4365999c18cea3.js","mappings":"0TAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIU,YAJF,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,eACJ,gBACJA,EAAAA,EAAAA,KAAA,SAAI,oOACJA,EAAAA,EAAAA,KAAA,SAAI,kGAAiGA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,wBAAiC,mLAAkLX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC1V,KAAQ,yBACN,sBAA0B,MAChCX,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,cAAuB,4IAClDX,EAAAA,EAAAA,KAAA,MACE,GAAM,uBACJ,wBACJA,EAAAA,EAAAA,KAAA,SAAI,uGACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,iCACrBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,yBACrBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,mCAEvBX,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,YACJA,EAAAA,EAAAA,KAAA,SAAI,uEACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,cACrBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,iBACrBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAM,oBAEvBX,EAAAA,EAAAA,KAACL,EAAS,CAACiB,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,wBAAwBJ,QAAQ,eACtFV,EAAAA,EAAAA,KAAA,MACE,GAAM,QACJ,SACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,iBACX,iNAYNX,EAAAA,EAAAA,KAAA,MACE,GAAM,cACJ,eACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eACX,iHAGNX,EAAAA,EAAAA,KAAA,MACE,GAAM,OACJ,QACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,gBACX,+CAINX,EAAAA,EAAAA,KAAA,MACE,GAAM,oBACJ,qBACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,MAAM,qBAA8B,+RAA8RX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,KACnX,KAAQ,gEACN,mBAAuB,0CAE/BX,EAAAA,EAAAA,KAAA,MACE,GAAM,sBACJ,uBACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,KAC9B,KAAQ,mCACN,mBACNX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,KAC9B,KAAQ,wCACN,gCAOZ,CAEAP,EAAWW,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/resources/recipes/css-styling/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-premiere-pro/uxp-premiere-pro/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"css-styling\"\n    }}>{`CSS styling`}</h1>\n    <p>{`Spectrum is Adobe's design system, used across multiple applications. We recommend that you use Spectrum-based controls wherever possible for UI, for consistency. In fact, UXP offers a ready-made Spectrum-styled UI library.`}</p>\n    <p>{`While you are exploring importing a stylesheet or making tweaks, you should keep in mind that `}<strong parentName=\"p\">{`UXP is not a browser`}</strong>{`. Its architecture does not (and will not) support all the CSS properties. For example, UXP cannot support grid layout innately. The ones that are supported are listed in the `}<a parentName=\"p\" {...{\n        \"href\": \"./#reference-material\"\n      }}>{`API reference docs`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`In plugins`}</strong>{`, you have a lot more flexibility to manage CSS styling. You can add it via CSS classes or use inline styling or add it via JavaScript.`}</p>\n    <h2 {...{\n      \"id\": \"system-requirements\"\n    }}>{`System requirements`}</h2>\n    <p>{`Please make sure your local environment uses the following application versions before proceeding.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Premiere Pro v25.2 or higher`}</li>\n      <li parentName=\"ul\">{`UDT v2.1.0 or higher`}</li>\n      <li parentName=\"ul\">{`Manifest version v5 or higher`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Example to add a background color to divs in three different ways:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`CSS class`}</li>\n      <li parentName=\"ul\">{`Inline style`}</li>\n      <li parentName=\"ul\">{`Via JavaScript`}</li>\n    </ul>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"HTML, JavaScript, CSS\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"html\"\n    }}>{`HTML`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"green\">\n  <h1>Styling from CSS class</h1>\n</div>\n\n<div style=\"background-color: yellow;\">\n  <h1>Inline styling</h1>\n</div>\n\n<div id=\"exampleDiv\">\n  <h1>Styling from JS</h1>\n</div>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const exampleDiv = document.getElementById(\"exampleDiv\");\nexampleDiv.style.backgroundColor = 'orange';\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"css\"\n    }}>{`CSS`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.green {\n  background-color: green;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"additional-notes\"\n    }}>{`Additional notes`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`CSS preprocessors`}</strong>{`: UXP understands pure CSS only. Using CSS preprocessors such as SASS or SCSS is possible, provided you transpile your code to a CSS stylesheet before using it. Additionally, you will require a tool like Webpack to create your plugin bundle correctly and a slightly different way to `}<a parentName=\"li\" {...{\n          \"href\": \"../../../plugins/tutorials/udt-deep-dive/working-with-react/\"\n        }}>{`debug using UDT`}</a>{` (similar to React framework setup).`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"reference-material\"\n    }}>{`Reference material`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../../uxp-api/reference-css/\"\n        }}>{`CSS reference`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../../uxp-api/reference-spectrum/\"\n        }}>{`Spectrum-styled components`}</a>\n        {/* [Sample]() // TODO link to kitchen sink plugin */}\n        {/* [Webpack template]() // TODO link to webpack template */}\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","CodeBlock","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}